{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst PassThrough = require('stream').PassThrough;\n\nconst urlLib = require('url');\n\nconst querystring = require('querystring');\n\nconst duplexer3 = require('duplexer3');\n\nconst isStream = require('is-stream');\n\nconst getStream = require('get-stream');\n\nconst timedOut = require('timed-out');\n\nconst urlParseLax = require('url-parse-lax');\n\nconst urlToOptions = require('url-to-options');\n\nconst lowercaseKeys = require('lowercase-keys');\n\nconst decompressResponse = require('decompress-response');\n\nconst isRetryAllowed = require('is-retry-allowed');\n\nconst Buffer = require('safe-buffer').Buffer;\n\nconst isURL = require('isurl');\n\nconst isPlainObj = require('is-plain-obj');\n\nconst PCancelable = require('p-cancelable');\n\nconst pTimeout = require('p-timeout');\n\nconst pkg = require('./package');\n\nconst getMethodRedirectCodes = new Set([300, 301, 302, 303, 304, 305, 307, 308]);\nconst allMethodRedirectCodes = new Set([300, 303, 307, 308]);\n\nfunction requestAsEventEmitter(opts) {\n  opts = opts || {};\n  const ee = new EventEmitter();\n  const requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n  const redirects = [];\n  let retryCount = 0;\n  let redirectUrl;\n\n  const get = opts => {\n    if (opts.protocol !== 'http:' && opts.protocol !== 'https:') {\n      ee.emit('error', new got.UnsupportedProtocolError(opts));\n      return;\n    }\n\n    let fn = opts.protocol === 'https:' ? https : http;\n\n    if (opts.useElectronNet && process.versions.electron) {\n      const electron = require('electron');\n\n      fn = electron.net || electron.remote.net;\n    }\n\n    const req = fn.request(opts, res => {\n      const statusCode = res.statusCode;\n      res.url = redirectUrl || requestUrl;\n      res.requestUrl = requestUrl;\n      const followRedirect = opts.followRedirect && 'location' in res.headers;\n      const redirectGet = followRedirect && getMethodRedirectCodes.has(statusCode);\n      const redirectAll = followRedirect && allMethodRedirectCodes.has(statusCode);\n\n      if (redirectAll || redirectGet && (opts.method === 'GET' || opts.method === 'HEAD')) {\n        res.resume();\n\n        if (statusCode === 303) {\n          // Server responded with \"see other\", indicating that the resource exists at another location,\n          // and the client should request it from that location via GET or HEAD.\n          opts.method = 'GET';\n        }\n\n        if (redirects.length >= 10) {\n          ee.emit('error', new got.MaxRedirectsError(statusCode, redirects, opts), null, res);\n          return;\n        }\n\n        const bufferString = Buffer.from(res.headers.location, 'binary').toString();\n        redirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n        redirects.push(redirectUrl);\n        const redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n        ee.emit('redirect', res, redirectOpts);\n        get(redirectOpts);\n        return;\n      }\n\n      setImmediate(() => {\n        const response = opts.decompress === true && typeof decompressResponse === 'function' && req.method !== 'HEAD' ? decompressResponse(res) : res;\n\n        if (!opts.decompress && ['gzip', 'deflate'].indexOf(res.headers['content-encoding']) !== -1) {\n          opts.encoding = null;\n        }\n\n        response.redirectUrls = redirects;\n        ee.emit('response', response);\n      });\n    });\n    req.once('error', err => {\n      const backoff = opts.retries(++retryCount, err);\n\n      if (backoff) {\n        setTimeout(get, backoff, opts);\n        return;\n      }\n\n      ee.emit('error', new got.RequestError(err, opts));\n    });\n\n    if (opts.gotTimeout) {\n      timedOut(req, opts.gotTimeout);\n    }\n\n    setImmediate(() => {\n      ee.emit('request', req);\n    });\n  };\n\n  setImmediate(() => {\n    get(opts);\n  });\n  return ee;\n}\n\nfunction asPromise(opts) {\n  const timeoutFn = requestPromise => opts.gotTimeout && opts.gotTimeout.request ? pTimeout(requestPromise, opts.gotTimeout.request, new got.RequestError({\n    message: 'Request timed out',\n    code: 'ETIMEDOUT'\n  }, opts)) : requestPromise;\n\n  return timeoutFn(new PCancelable((onCancel, resolve, reject) => {\n    const ee = requestAsEventEmitter(opts);\n    let cancelOnRequest = false;\n    onCancel(() => {\n      cancelOnRequest = true;\n    });\n    ee.on('request', req => {\n      if (cancelOnRequest) {\n        req.abort();\n      }\n\n      onCancel(() => {\n        req.abort();\n      });\n\n      if (isStream(opts.body)) {\n        opts.body.pipe(req);\n        opts.body = undefined;\n        return;\n      }\n\n      req.end(opts.body);\n    });\n    ee.on('response', res => {\n      const stream = opts.encoding === null ? getStream.buffer(res) : getStream(res, opts);\n      stream.catch(err => reject(new got.ReadError(err, opts))).then(data => {\n        const statusCode = res.statusCode;\n        const limitStatusCode = opts.followRedirect ? 299 : 399;\n        res.body = data;\n\n        if (opts.json && res.body) {\n          try {\n            res.body = JSON.parse(res.body);\n          } catch (e) {\n            if (statusCode >= 200 && statusCode < 300) {\n              throw new got.ParseError(e, statusCode, opts, data);\n            }\n          }\n        }\n\n        if (statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n          throw new got.HTTPError(statusCode, res.headers, opts);\n        }\n\n        resolve(res);\n      }).catch(err => {\n        Object.defineProperty(err, 'response', {\n          value: res\n        });\n        reject(err);\n      });\n    });\n    ee.on('error', reject);\n  }));\n}\n\nfunction asStream(opts) {\n  const input = new PassThrough();\n  const output = new PassThrough();\n  const proxy = duplexer3(input, output);\n  let timeout;\n\n  if (opts.gotTimeout && opts.gotTimeout.request) {\n    timeout = setTimeout(() => {\n      proxy.emit('error', new got.RequestError({\n        message: 'Request timed out',\n        code: 'ETIMEDOUT'\n      }, opts));\n    }, opts.gotTimeout.request);\n  }\n\n  if (opts.json) {\n    throw new Error('got can not be used as stream when options.json is used');\n  }\n\n  if (opts.body) {\n    proxy.write = () => {\n      throw new Error('got\\'s stream is not writable when options.body is used');\n    };\n  }\n\n  const ee = requestAsEventEmitter(opts);\n  ee.on('request', req => {\n    proxy.emit('request', req);\n\n    if (isStream(opts.body)) {\n      opts.body.pipe(req);\n      return;\n    }\n\n    if (opts.body) {\n      req.end(opts.body);\n      return;\n    }\n\n    if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n      input.pipe(req);\n      return;\n    }\n\n    req.end();\n  });\n  ee.on('response', res => {\n    clearTimeout(timeout);\n    const statusCode = res.statusCode;\n    res.pipe(output);\n\n    if (statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {\n      proxy.emit('error', new got.HTTPError(statusCode, res.headers, opts), null, res);\n      return;\n    }\n\n    proxy.emit('response', res);\n  });\n  ee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n  ee.on('error', proxy.emit.bind(proxy, 'error'));\n  return proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n  if (typeof url !== 'string' && typeof url !== 'object') {\n    throw new TypeError(`Parameter \\`url\\` must be a string or object, not ${typeof url}`);\n  } else if (typeof url === 'string') {\n    url = url.replace(/^unix:/, 'http://$&');\n    url = urlParseLax(url);\n  } else if (isURL.lenient(url)) {\n    url = urlToOptions(url);\n  }\n\n  if (url.auth) {\n    throw new Error('Basic authentication must be done with auth option');\n  }\n\n  opts = Object.assign({\n    path: '',\n    retries: 2,\n    decompress: true,\n    useElectronNet: true\n  }, url, {\n    protocol: url.protocol || 'http:' // Override both null/undefined with default protocol\n\n  }, opts);\n  opts.headers = Object.assign({\n    'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`,\n    'accept-encoding': 'gzip,deflate'\n  }, lowercaseKeys(opts.headers));\n  const query = opts.query;\n\n  if (query) {\n    if (typeof query !== 'string') {\n      opts.query = querystring.stringify(query);\n    }\n\n    opts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n    delete opts.query;\n  }\n\n  if (opts.json && opts.headers.accept === undefined) {\n    opts.headers.accept = 'application/json';\n  }\n\n  const body = opts.body;\n\n  if (body !== null && body !== undefined) {\n    const headers = opts.headers;\n\n    if (!isStream(body) && typeof body !== 'string' && !Buffer.isBuffer(body) && !(opts.form || opts.json)) {\n      throw new TypeError('options.body must be a ReadableStream, string, Buffer or plain Object');\n    }\n\n    const canBodyBeStringified = isPlainObj(body) || Array.isArray(body);\n\n    if ((opts.form || opts.json) && !canBodyBeStringified) {\n      throw new TypeError('options.body must be a plain Object or Array when options.form or options.json is used');\n    }\n\n    if (isStream(body) && typeof body.getBoundary === 'function') {\n      // Special case for https://github.com/form-data/form-data\n      headers['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n    } else if (opts.form && canBodyBeStringified) {\n      headers['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n      opts.body = querystring.stringify(body);\n    } else if (opts.json && canBodyBeStringified) {\n      headers['content-type'] = headers['content-type'] || 'application/json';\n      opts.body = JSON.stringify(body);\n    }\n\n    if (headers['content-length'] === undefined && headers['transfer-encoding'] === undefined && !isStream(body)) {\n      const length = typeof opts.body === 'string' ? Buffer.byteLength(opts.body) : opts.body.length;\n      headers['content-length'] = length;\n    }\n\n    opts.method = (opts.method || 'POST').toUpperCase();\n  } else {\n    opts.method = (opts.method || 'GET').toUpperCase();\n  }\n\n  if (opts.hostname === 'unix') {\n    const matches = /(.+?):(.+)/.exec(opts.path);\n\n    if (matches) {\n      opts.socketPath = matches[1];\n      opts.path = matches[2];\n      opts.host = null;\n    }\n  }\n\n  if (typeof opts.retries !== 'function') {\n    const retries = opts.retries;\n\n    opts.retries = (iter, err) => {\n      if (iter > retries || !isRetryAllowed(err)) {\n        return 0;\n      }\n\n      const noise = Math.random() * 100;\n      return (1 << iter) * 1000 + noise;\n    };\n  }\n\n  if (opts.followRedirect === undefined) {\n    opts.followRedirect = true;\n  }\n\n  if (opts.timeout) {\n    if (typeof opts.timeout === 'number') {\n      opts.gotTimeout = {\n        request: opts.timeout\n      };\n    } else {\n      opts.gotTimeout = opts.timeout;\n    }\n\n    delete opts.timeout;\n  }\n\n  return opts;\n}\n\nfunction got(url, opts) {\n  try {\n    return asPromise(normalizeArguments(url, opts));\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nconst methods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\n\nfor (const method of methods) {\n  got[method] = (url, opts) => got(url, Object.assign({}, opts, {\n    method\n  }));\n\n  got.stream[method] = (url, opts) => got.stream(url, Object.assign({}, opts, {\n    method\n  }));\n}\n\nclass StdError extends Error {\n  constructor(message, error, opts) {\n    super(message);\n    this.name = 'StdError';\n\n    if (error.code !== undefined) {\n      this.code = error.code;\n    }\n\n    Object.assign(this, {\n      host: opts.host,\n      hostname: opts.hostname,\n      method: opts.method,\n      path: opts.path,\n      protocol: opts.protocol,\n      url: opts.href\n    });\n  }\n\n}\n\ngot.RequestError = class extends StdError {\n  constructor(error, opts) {\n    super(error.message, error, opts);\n    this.name = 'RequestError';\n  }\n\n};\ngot.ReadError = class extends StdError {\n  constructor(error, opts) {\n    super(error.message, error, opts);\n    this.name = 'ReadError';\n  }\n\n};\ngot.ParseError = class extends StdError {\n  constructor(error, statusCode, opts, data) {\n    super(`${error.message} in \"${urlLib.format(opts)}\": \\n${data.slice(0, 77)}...`, error, opts);\n    this.name = 'ParseError';\n    this.statusCode = statusCode;\n    this.statusMessage = http.STATUS_CODES[this.statusCode];\n  }\n\n};\ngot.HTTPError = class extends StdError {\n  constructor(statusCode, headers, opts) {\n    const statusMessage = http.STATUS_CODES[statusCode];\n    super(`Response code ${statusCode} (${statusMessage})`, {}, opts);\n    this.name = 'HTTPError';\n    this.statusCode = statusCode;\n    this.statusMessage = statusMessage;\n    this.headers = headers;\n  }\n\n};\ngot.MaxRedirectsError = class extends StdError {\n  constructor(statusCode, redirectUrls, opts) {\n    super('Redirected 10 times. Aborting.', {}, opts);\n    this.name = 'MaxRedirectsError';\n    this.statusCode = statusCode;\n    this.statusMessage = http.STATUS_CODES[this.statusCode];\n    this.redirectUrls = redirectUrls;\n  }\n\n};\ngot.UnsupportedProtocolError = class extends StdError {\n  constructor(opts) {\n    super(`Unsupported protocol \"${opts.protocol}\"`, {}, opts);\n    this.name = 'UnsupportedProtocolError';\n  }\n\n};\nmodule.exports = got;","map":{"version":3,"sources":["/Users/toddalexander/Documents/Github/invoice-app/node_modules/currency/node_modules/got/index.js"],"names":["EventEmitter","require","http","https","PassThrough","urlLib","querystring","duplexer3","isStream","getStream","timedOut","urlParseLax","urlToOptions","lowercaseKeys","decompressResponse","isRetryAllowed","Buffer","isURL","isPlainObj","PCancelable","pTimeout","pkg","getMethodRedirectCodes","Set","allMethodRedirectCodes","requestAsEventEmitter","opts","ee","requestUrl","href","resolve","format","path","redirects","retryCount","redirectUrl","get","protocol","emit","got","UnsupportedProtocolError","fn","useElectronNet","process","versions","electron","net","remote","req","request","res","statusCode","url","followRedirect","headers","redirectGet","has","redirectAll","method","resume","length","MaxRedirectsError","bufferString","from","location","toString","push","redirectOpts","Object","assign","parse","setImmediate","response","decompress","indexOf","encoding","redirectUrls","once","err","backoff","retries","setTimeout","RequestError","gotTimeout","asPromise","timeoutFn","requestPromise","message","code","onCancel","reject","cancelOnRequest","on","abort","body","pipe","undefined","end","stream","buffer","catch","ReadError","then","data","limitStatusCode","json","JSON","e","ParseError","HTTPError","defineProperty","value","asStream","input","output","proxy","timeout","Error","write","clearTimeout","bind","normalizeArguments","TypeError","replace","lenient","auth","name","version","query","stringify","split","accept","isBuffer","form","canBodyBeStringified","Array","isArray","getBoundary","byteLength","toUpperCase","hostname","matches","exec","socketPath","host","iter","noise","Math","random","Promise","methods","StdError","constructor","error","slice","statusMessage","STATUS_CODES","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst PassThrough = require('stream').PassThrough;\nconst urlLib = require('url');\nconst querystring = require('querystring');\nconst duplexer3 = require('duplexer3');\nconst isStream = require('is-stream');\nconst getStream = require('get-stream');\nconst timedOut = require('timed-out');\nconst urlParseLax = require('url-parse-lax');\nconst urlToOptions = require('url-to-options');\nconst lowercaseKeys = require('lowercase-keys');\nconst decompressResponse = require('decompress-response');\nconst isRetryAllowed = require('is-retry-allowed');\nconst Buffer = require('safe-buffer').Buffer;\nconst isURL = require('isurl');\nconst isPlainObj = require('is-plain-obj');\nconst PCancelable = require('p-cancelable');\nconst pTimeout = require('p-timeout');\nconst pkg = require('./package');\n\nconst getMethodRedirectCodes = new Set([300, 301, 302, 303, 304, 305, 307, 308]);\nconst allMethodRedirectCodes = new Set([300, 303, 307, 308]);\n\nfunction requestAsEventEmitter(opts) {\n\topts = opts || {};\n\n\tconst ee = new EventEmitter();\n\tconst requestUrl = opts.href || urlLib.resolve(urlLib.format(opts), opts.path);\n\tconst redirects = [];\n\tlet retryCount = 0;\n\tlet redirectUrl;\n\n\tconst get = opts => {\n\t\tif (opts.protocol !== 'http:' && opts.protocol !== 'https:') {\n\t\t\tee.emit('error', new got.UnsupportedProtocolError(opts));\n\t\t\treturn;\n\t\t}\n\n\t\tlet fn = opts.protocol === 'https:' ? https : http;\n\n\t\tif (opts.useElectronNet && process.versions.electron) {\n\t\t\tconst electron = require('electron');\n\t\t\tfn = electron.net || electron.remote.net;\n\t\t}\n\n\t\tconst req = fn.request(opts, res => {\n\t\t\tconst statusCode = res.statusCode;\n\n\t\t\tres.url = redirectUrl || requestUrl;\n\t\t\tres.requestUrl = requestUrl;\n\n\t\t\tconst followRedirect = opts.followRedirect && 'location' in res.headers;\n\t\t\tconst redirectGet = followRedirect && getMethodRedirectCodes.has(statusCode);\n\t\t\tconst redirectAll = followRedirect && allMethodRedirectCodes.has(statusCode);\n\n\t\t\tif (redirectAll || (redirectGet && (opts.method === 'GET' || opts.method === 'HEAD'))) {\n\t\t\t\tres.resume();\n\n\t\t\t\tif (statusCode === 303) {\n\t\t\t\t\t// Server responded with \"see other\", indicating that the resource exists at another location,\n\t\t\t\t\t// and the client should request it from that location via GET or HEAD.\n\t\t\t\t\topts.method = 'GET';\n\t\t\t\t}\n\n\t\t\t\tif (redirects.length >= 10) {\n\t\t\t\t\tee.emit('error', new got.MaxRedirectsError(statusCode, redirects, opts), null, res);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst bufferString = Buffer.from(res.headers.location, 'binary').toString();\n\n\t\t\t\tredirectUrl = urlLib.resolve(urlLib.format(opts), bufferString);\n\n\t\t\t\tredirects.push(redirectUrl);\n\n\t\t\t\tconst redirectOpts = Object.assign({}, opts, urlLib.parse(redirectUrl));\n\n\t\t\t\tee.emit('redirect', res, redirectOpts);\n\n\t\t\t\tget(redirectOpts);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetImmediate(() => {\n\t\t\t\tconst response = opts.decompress === true &&\n\t\t\t\t\ttypeof decompressResponse === 'function' &&\n\t\t\t\t\treq.method !== 'HEAD' ? decompressResponse(res) : res;\n\n\t\t\t\tif (!opts.decompress && ['gzip', 'deflate'].indexOf(res.headers['content-encoding']) !== -1) {\n\t\t\t\t\topts.encoding = null;\n\t\t\t\t}\n\n\t\t\t\tresponse.redirectUrls = redirects;\n\n\t\t\t\tee.emit('response', response);\n\t\t\t});\n\t\t});\n\n\t\treq.once('error', err => {\n\t\t\tconst backoff = opts.retries(++retryCount, err);\n\n\t\t\tif (backoff) {\n\t\t\t\tsetTimeout(get, backoff, opts);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tee.emit('error', new got.RequestError(err, opts));\n\t\t});\n\n\t\tif (opts.gotTimeout) {\n\t\t\ttimedOut(req, opts.gotTimeout);\n\t\t}\n\n\t\tsetImmediate(() => {\n\t\t\tee.emit('request', req);\n\t\t});\n\t};\n\n\tsetImmediate(() => {\n\t\tget(opts);\n\t});\n\treturn ee;\n}\n\nfunction asPromise(opts) {\n\tconst timeoutFn = requestPromise => opts.gotTimeout && opts.gotTimeout.request ?\n\t\tpTimeout(requestPromise, opts.gotTimeout.request, new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts)) :\n\t\trequestPromise;\n\n\treturn timeoutFn(new PCancelable((onCancel, resolve, reject) => {\n\t\tconst ee = requestAsEventEmitter(opts);\n\t\tlet cancelOnRequest = false;\n\n\t\tonCancel(() => {\n\t\t\tcancelOnRequest = true;\n\t\t});\n\n\t\tee.on('request', req => {\n\t\t\tif (cancelOnRequest) {\n\t\t\t\treq.abort();\n\t\t\t}\n\n\t\t\tonCancel(() => {\n\t\t\t\treq.abort();\n\t\t\t});\n\n\t\t\tif (isStream(opts.body)) {\n\t\t\t\topts.body.pipe(req);\n\t\t\t\topts.body = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treq.end(opts.body);\n\t\t});\n\n\t\tee.on('response', res => {\n\t\t\tconst stream = opts.encoding === null ? getStream.buffer(res) : getStream(res, opts);\n\n\t\t\tstream\n\t\t\t\t.catch(err => reject(new got.ReadError(err, opts)))\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\t\tconst limitStatusCode = opts.followRedirect ? 299 : 399;\n\n\t\t\t\t\tres.body = data;\n\n\t\t\t\t\tif (opts.json && res.body) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tres.body = JSON.parse(res.body);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tif (statusCode >= 200 && statusCode < 300) {\n\t\t\t\t\t\t\t\tthrow new got.ParseError(e, statusCode, opts, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n\t\t\t\t\t\tthrow new got.HTTPError(statusCode, res.headers, opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(res);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tObject.defineProperty(err, 'response', {value: res});\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\n\t\tee.on('error', reject);\n\t}));\n}\n\nfunction asStream(opts) {\n\tconst input = new PassThrough();\n\tconst output = new PassThrough();\n\tconst proxy = duplexer3(input, output);\n\tlet timeout;\n\n\tif (opts.gotTimeout && opts.gotTimeout.request) {\n\t\ttimeout = setTimeout(() => {\n\t\t\tproxy.emit('error', new got.RequestError({message: 'Request timed out', code: 'ETIMEDOUT'}, opts));\n\t\t}, opts.gotTimeout.request);\n\t}\n\n\tif (opts.json) {\n\t\tthrow new Error('got can not be used as stream when options.json is used');\n\t}\n\n\tif (opts.body) {\n\t\tproxy.write = () => {\n\t\t\tthrow new Error('got\\'s stream is not writable when options.body is used');\n\t\t};\n\t}\n\n\tconst ee = requestAsEventEmitter(opts);\n\n\tee.on('request', req => {\n\t\tproxy.emit('request', req);\n\n\t\tif (isStream(opts.body)) {\n\t\t\topts.body.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.body) {\n\t\t\treq.end(opts.body);\n\t\t\treturn;\n\t\t}\n\n\t\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\t\tinput.pipe(req);\n\t\t\treturn;\n\t\t}\n\n\t\treq.end();\n\t});\n\n\tee.on('response', res => {\n\t\tclearTimeout(timeout);\n\n\t\tconst statusCode = res.statusCode;\n\n\t\tres.pipe(output);\n\n\t\tif (statusCode !== 304 && (statusCode < 200 || statusCode > 299)) {\n\t\t\tproxy.emit('error', new got.HTTPError(statusCode, res.headers, opts), null, res);\n\t\t\treturn;\n\t\t}\n\n\t\tproxy.emit('response', res);\n\t});\n\n\tee.on('redirect', proxy.emit.bind(proxy, 'redirect'));\n\tee.on('error', proxy.emit.bind(proxy, 'error'));\n\n\treturn proxy;\n}\n\nfunction normalizeArguments(url, opts) {\n\tif (typeof url !== 'string' && typeof url !== 'object') {\n\t\tthrow new TypeError(`Parameter \\`url\\` must be a string or object, not ${typeof url}`);\n\t} else if (typeof url === 'string') {\n\t\turl = url.replace(/^unix:/, 'http://$&');\n\t\turl = urlParseLax(url);\n\t} else if (isURL.lenient(url)) {\n\t\turl = urlToOptions(url);\n\t}\n\n\tif (url.auth) {\n\t\tthrow new Error('Basic authentication must be done with auth option');\n\t}\n\n\topts = Object.assign(\n\t\t{\n\t\t\tpath: '',\n\t\t\tretries: 2,\n\t\t\tdecompress: true,\n\t\t\tuseElectronNet: true\n\t\t},\n\t\turl,\n\t\t{\n\t\t\tprotocol: url.protocol || 'http:' // Override both null/undefined with default protocol\n\t\t},\n\t\topts\n\t);\n\n\topts.headers = Object.assign({\n\t\t'user-agent': `${pkg.name}/${pkg.version} (https://github.com/sindresorhus/got)`,\n\t\t'accept-encoding': 'gzip,deflate'\n\t}, lowercaseKeys(opts.headers));\n\n\tconst query = opts.query;\n\n\tif (query) {\n\t\tif (typeof query !== 'string') {\n\t\t\topts.query = querystring.stringify(query);\n\t\t}\n\n\t\topts.path = `${opts.path.split('?')[0]}?${opts.query}`;\n\t\tdelete opts.query;\n\t}\n\n\tif (opts.json && opts.headers.accept === undefined) {\n\t\topts.headers.accept = 'application/json';\n\t}\n\n\tconst body = opts.body;\n\tif (body !== null && body !== undefined) {\n\t\tconst headers = opts.headers;\n\t\tif (!isStream(body) && typeof body !== 'string' && !Buffer.isBuffer(body) && !(opts.form || opts.json)) {\n\t\t\tthrow new TypeError('options.body must be a ReadableStream, string, Buffer or plain Object');\n\t\t}\n\n\t\tconst canBodyBeStringified = isPlainObj(body) || Array.isArray(body);\n\t\tif ((opts.form || opts.json) && !canBodyBeStringified) {\n\t\t\tthrow new TypeError('options.body must be a plain Object or Array when options.form or options.json is used');\n\t\t}\n\n\t\tif (isStream(body) && typeof body.getBoundary === 'function') {\n\t\t\t// Special case for https://github.com/form-data/form-data\n\t\t\theaders['content-type'] = headers['content-type'] || `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t} else if (opts.form && canBodyBeStringified) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/x-www-form-urlencoded';\n\t\t\topts.body = querystring.stringify(body);\n\t\t} else if (opts.json && canBodyBeStringified) {\n\t\t\theaders['content-type'] = headers['content-type'] || 'application/json';\n\t\t\topts.body = JSON.stringify(body);\n\t\t}\n\n\t\tif (headers['content-length'] === undefined && headers['transfer-encoding'] === undefined && !isStream(body)) {\n\t\t\tconst length = typeof opts.body === 'string' ? Buffer.byteLength(opts.body) : opts.body.length;\n\t\t\theaders['content-length'] = length;\n\t\t}\n\n\t\topts.method = (opts.method || 'POST').toUpperCase();\n\t} else {\n\t\topts.method = (opts.method || 'GET').toUpperCase();\n\t}\n\n\tif (opts.hostname === 'unix') {\n\t\tconst matches = /(.+?):(.+)/.exec(opts.path);\n\n\t\tif (matches) {\n\t\t\topts.socketPath = matches[1];\n\t\t\topts.path = matches[2];\n\t\t\topts.host = null;\n\t\t}\n\t}\n\n\tif (typeof opts.retries !== 'function') {\n\t\tconst retries = opts.retries;\n\n\t\topts.retries = (iter, err) => {\n\t\t\tif (iter > retries || !isRetryAllowed(err)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst noise = Math.random() * 100;\n\n\t\t\treturn ((1 << iter) * 1000) + noise;\n\t\t};\n\t}\n\n\tif (opts.followRedirect === undefined) {\n\t\topts.followRedirect = true;\n\t}\n\n\tif (opts.timeout) {\n\t\tif (typeof opts.timeout === 'number') {\n\t\t\topts.gotTimeout = {request: opts.timeout};\n\t\t} else {\n\t\t\topts.gotTimeout = opts.timeout;\n\t\t}\n\t\tdelete opts.timeout;\n\t}\n\n\treturn opts;\n}\n\nfunction got(url, opts) {\n\ttry {\n\t\treturn asPromise(normalizeArguments(url, opts));\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n}\n\ngot.stream = (url, opts) => asStream(normalizeArguments(url, opts));\n\nconst methods = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nfor (const method of methods) {\n\tgot[method] = (url, opts) => got(url, Object.assign({}, opts, {method}));\n\tgot.stream[method] = (url, opts) => got.stream(url, Object.assign({}, opts, {method}));\n}\n\nclass StdError extends Error {\n\tconstructor(message, error, opts) {\n\t\tsuper(message);\n\t\tthis.name = 'StdError';\n\n\t\tif (error.code !== undefined) {\n\t\t\tthis.code = error.code;\n\t\t}\n\n\t\tObject.assign(this, {\n\t\t\thost: opts.host,\n\t\t\thostname: opts.hostname,\n\t\t\tmethod: opts.method,\n\t\t\tpath: opts.path,\n\t\t\tprotocol: opts.protocol,\n\t\t\turl: opts.href\n\t\t});\n\t}\n}\n\ngot.RequestError = class extends StdError {\n\tconstructor(error, opts) {\n\t\tsuper(error.message, error, opts);\n\t\tthis.name = 'RequestError';\n\t}\n};\n\ngot.ReadError = class extends StdError {\n\tconstructor(error, opts) {\n\t\tsuper(error.message, error, opts);\n\t\tthis.name = 'ReadError';\n\t}\n};\n\ngot.ParseError = class extends StdError {\n\tconstructor(error, statusCode, opts, data) {\n\t\tsuper(`${error.message} in \"${urlLib.format(opts)}\": \\n${data.slice(0, 77)}...`, error, opts);\n\t\tthis.name = 'ParseError';\n\t\tthis.statusCode = statusCode;\n\t\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\t}\n};\n\ngot.HTTPError = class extends StdError {\n\tconstructor(statusCode, headers, opts) {\n\t\tconst statusMessage = http.STATUS_CODES[statusCode];\n\t\tsuper(`Response code ${statusCode} (${statusMessage})`, {}, opts);\n\t\tthis.name = 'HTTPError';\n\t\tthis.statusCode = statusCode;\n\t\tthis.statusMessage = statusMessage;\n\t\tthis.headers = headers;\n\t}\n};\n\ngot.MaxRedirectsError = class extends StdError {\n\tconstructor(statusCode, redirectUrls, opts) {\n\t\tsuper('Redirected 10 times. Aborting.', {}, opts);\n\t\tthis.name = 'MaxRedirectsError';\n\t\tthis.statusCode = statusCode;\n\t\tthis.statusMessage = http.STATUS_CODES[this.statusCode];\n\t\tthis.redirectUrls = redirectUrls;\n\t}\n};\n\ngot.UnsupportedProtocolError = class extends StdError {\n\tconstructor(opts) {\n\t\tsuper(`Unsupported protocol \"${opts.protocol}\"`, {}, opts);\n\t\tthis.name = 'UnsupportedProtocolError';\n\t}\n};\n\nmodule.exports = got;\n"]},"metadata":{},"sourceType":"script"}