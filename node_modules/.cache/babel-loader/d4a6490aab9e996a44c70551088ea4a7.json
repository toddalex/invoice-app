{"ast":null,"code":"var _jsxFileName = \"/Users/toddalexander/Documents/Github/invoice-app/src/components/InvoiceList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport InvoiceCard from './InvoiceCard';\nimport '../App.css';\n\nconst InvoiceList = () => {\n  const [invoices, setInvoices] = useState([]);\n\n  const getInvoices = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/invoices');\n      const data = await response.json();\n      setInvoices(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getInvoices();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invoice-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }\n  }, \"Create Inovice\"), invoices.map((invoice, index) => {\n    return /*#__PURE__*/React.createElement(InvoiceCard, {\n      name: invoice.name,\n      email: invoice.email,\n      dueDate: invoice.due_date,\n      total: invoice.total,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default InvoiceList;","map":{"version":3,"sources":["/Users/toddalexander/Documents/Github/invoice-app/src/components/InvoiceList.jsx"],"names":["React","useEffect","useState","Link","InvoiceCard","InvoiceList","invoices","setInvoices","getInvoices","response","fetch","data","json","err","console","error","message","map","invoice","index","name","email","due_date","total"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,YAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAL,MAAAA,WAAW,CAACI,IAAD,CAAX;AACD,KALD,CAKE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GATD;;AAWAf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eACe;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADf,EAEGF,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,wBAAO,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAED,OAAO,CAACE,IAA3B;AAAiC,MAAA,KAAK,EAAEF,OAAO,CAACG,KAAhD;AAAuD,MAAA,OAAO,EAAEH,OAAO,CAACI,QAAxE;AAAkF,MAAA,KAAK,EAAEJ,OAAO,CAACK,KAAjG;AAAwG,MAAA,GAAG,EAAEJ,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,CADF;AAQD,CA1BD;;AA4BA,eAAed,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport InvoiceCard from './InvoiceCard';\nimport '../App.css'\n\nconst InvoiceList = () => {\n  const [invoices, setInvoices] = useState([]);\n\n  const getInvoices = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/invoices');\n      const data = await response.json()\n\n      setInvoices(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getInvoices()\n  }, []); \n  \n  return(\n    <div className=\"invoice-list-container\">\n      <Link></Link><button type=\"submit\">Create Inovice</button>\n      {invoices.map((invoice, index) => {\n        return <InvoiceCard name={invoice.name} email={invoice.email} dueDate={invoice.due_date} total={invoice.total} key={index} />\n      })}\n    </div>\n  )\n}\n\nexport default InvoiceList; "]},"metadata":{},"sourceType":"module"}