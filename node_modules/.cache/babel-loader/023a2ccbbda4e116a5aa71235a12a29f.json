{"ast":null,"code":"var _jsxFileName = \"/Users/toddalexander/Documents/Github/invoice-app/src/components/CreateLineItem.jsx\";\nimport React, { useState } from 'react';\nimport Icon from '@material-ui/core/Icon';\n\nconst CreateLineItem = ({\n  email\n}) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const handleLineItemAdd = async e => {\n    e.preventDefault();\n    const body = {\n      description,\n      amount,\n      id\n    };\n\n    try {\n      const response = await fetch('http://localhost:8080/lineitems', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      props.addLineItem(body);\n      console.log('Inside Line Item', response, body);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-item-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-item-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line-item-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    style: {\n      color: 'blue',\n      fontSize: 30,\n      cursor: 'pointer'\n    },\n    onClick: handleLineItemAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"add_circle\"));\n};\n\nexport default LineItem;","map":{"version":3,"sources":["/Users/toddalexander/Documents/Github/invoice-app/src/components/CreateLineItem.jsx"],"names":["React","useState","Icon","CreateLineItem","email","description","setDescription","amount","setAmount","handleLineItemAdd","e","preventDefault","body","id","response","fetch","method","headers","JSON","stringify","props","addLineItem","console","log","err","error","message","target","value","color","fontSize","cursor","LineItem"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMQ,iBAAiB,GAAG,MAAOC,CAAP,IAAa;AACrCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAAEP,MAAAA,WAAF;AAAeE,MAAAA,MAAf;AAAuBM,MAAAA;AAAvB,KAAb;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC9DC,QAAAA,MAAM,EAAE,MADsD;AAE9DC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFqD;AAG9DL,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHwD,OAApC,CAA5B;AAKAQ,MAAAA,KAAK,CAACC,WAAN,CAAkBT,IAAlB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,QAAhC,EAA0CF,IAA1C;AACD,KARD,CAQE,OAAOY,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACD;AACF,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,QAAQ,EAAGhB,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAErB,MAHT;AAIE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACiB,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAkBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KADT;AAEE,IAAA,OAAO,EAAEtB,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,CADF;AAyBD,CA7CD;;AA+CA,eAAeuB,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport Icon from '@material-ui/core/Icon';\n\nconst CreateLineItem = ({ email, }) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(0);\n\n  const handleLineItemAdd = async (e) => {\n    e.preventDefault();\n    const body = { description, amount, id}\n    try {\n      const response = await fetch('http://localhost:8080/lineitems', {\n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify(body)\n      });\n      props.addLineItem(body)\n      console.log('Inside Line Item', response, body)\n    } catch (err) {\n      console.error(err.message); \n    }  \n  };\n\n  return (\n    <div className=\"line-item-wrapper\">\n      <div className=\"line-item-input\">\n        <label className=\"input-label\">Description</label>\n        <input \n          type=\"text\" \n          name=\"description\" \n          onChange={(e) => setDescription(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"line-item-input\">\n        <label className=\"input-label\">Amount</label>\n        <input \n          type=\"number\" \n          name=\"amount\" \n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        ></input>\n      </div>\n      <Icon \n        style={{ color: 'blue', fontSize: 30, cursor: 'pointer'}}\n        onClick={handleLineItemAdd}\n      >add_circle</Icon>\n    </div>\n  );\n}\n\nexport default LineItem;"]},"metadata":{},"sourceType":"module"}